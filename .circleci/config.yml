# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  
  create-virtual-env:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            ls
            . venv/bin/activate
            pwd
            ls -a
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: test
          command: |
            mkdir test
            ls
  linting:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: lint dockerfile
          command: |
            ls -a
            . venv/bin/activate
            pwd
            # # Install hadolint jo
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
            hadolint ./Dockerfile
      - run:
          name: lint app.py
          command: |
            ls -a
            . venv/bin/activate
            make lint

  build-dockerimage:
    docker:
      - image: docker:17.05.0-ce-git #python:3.7.3-stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: execute dockerfile
          command: |
            docker build --tag=$DOCKERHUB_USERNAME/api_ci .
            docker image ls  
      - run:
          name: pushing to repository
          command: |
            #docker build --tag=api_ci .
            docker image ls
            echo "$DOCKERHUB_PASS"
            docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASS"
            docker push $DOCKERHUB_USERNAME/api_ci:latest
  configure-kubectl:
    docker:
      - image: "cimg/python:3.10"
    # parameters:
    #   cluster-name:
    #     description: |
    #       Name of cluster
    #     type: string
    steps:
      - checkout
      #- setup_remote_docker
      - kubernetes/install-kubectl
      # - aws_cli_install
      # - aws_configure_credentials
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: KubernetesCluster-gkrComUBGA0y
          install-kubectl: true
      - run:
          name: configure kubectl and deploy
          command: |
            kubectl version --client
            kubectl config view
            kubectl get nodes
            #kubectl cluster-info
            #aws eks update-kubeconfig --region us-west-2 --name KubernetesCluster-gkrComUBGA0y

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  default:
     jobs:
      # - say-hello
      #  - create-virtual-env
      #  - linting:
      #     requires: 
      #       - create-virtual-env
      #  - build-dockerimage:
      #     requires:
      #       - linting
        - configure-kubectl:
            cluster-name: KubernetesCluster-gkrComUBGA0y
